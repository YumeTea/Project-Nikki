[gd_scene load_steps=9 format=2]

[ext_resource path="res://resources/textures/Water 2.png" type="Texture" id=1]
[ext_resource path="res://scenes/environment/water.gd" type="Script" id=2]

[sub_resource type="BoxShape" id=1]

[sub_resource type="QuadMesh" id=2]
size = Vector2( 2, 2 )

[sub_resource type="Shader" id=3]
code = "shader_type spatial;

//Color Variables
uniform sampler2D texturemap : hint_albedo;
uniform vec4 albedo : hint_color;

//Texture Variables
uniform vec2 tile_factor = vec2(1.0, 1.0);
uniform vec2 aspect_ratio = vec2(1.0, 1.0);
uniform bool transparent = true;

//Wave Variables
uniform vec2 wave_amount = vec2(5.0, 5.0);
uniform vec2 offset_scale = vec2(0.1, 0.1);
uniform vec2 time_scale = vec2(0.6, 0.9);
uniform vec2 amplitude = vec2(0.4, 0.4);


void vertex() {
	COLOR.a = albedo.a;
}


void fragment() {
	//Tiling of UVs
	vec2 tiled_uvs = UV * tile_factor;
	tiled_uvs *= (aspect_ratio.x / aspect_ratio.y);

	//Waves
	vec2 wave_offset;
	//X Wave Offset
	wave_offset.x = (sin(TIME * time_scale.x + (tiled_uvs.y * wave_amount.y)) * offset_scale.x) * amplitude.x;
	wave_offset.x *= tiled_uvs.y - 0.5; //subtract 0.5 to offset from center instead of corner
	
	//Y Wave Offset
	wave_offset.y = (cos(TIME * time_scale.y + (tiled_uvs.y * wave_amount.y)) * offset_scale.y) * amplitude.y;
	wave_offset.y *= tiled_uvs.x - 0.5; //subtract 0.5 to offset from center instead of corner
	
	tiled_uvs += wave_offset;
	
	//Texture
	ALBEDO = texture(texturemap, tiled_uvs).rgb;
	
	//Transparency
	if (transparent == true) {
		ALPHA = albedo.a;
	}
	else {
		ALPHA = 1.0;
	}
}














"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/albedo = Color( 0, 0, 0, 0.752941 )
shader_param/tile_factor = Vector2( 15.7352, 15.7352 )
shader_param/aspect_ratio = Vector2( 1, 1 )
shader_param/transparent = true
shader_param/wave_amount = Vector2( 5, 5 )
shader_param/offset_scale = Vector2( 0.1, 0.1 )
shader_param/time_scale = Vector2( 0.6, 0.9 )
shader_param/amplitude = Vector2( 0.0254208, 0.0254208 )
shader_param/texturemap = ExtResource( 1 )

[sub_resource type="CubeMesh" id=5]

[sub_resource type="SpatialMaterial" id=6]
flags_transparent = true
albedo_color = Color( 0.247059, 0.72549, 0.984314, 0.705882 )
emission_enabled = true
emission = Color( 0.0705882, 0.180392, 0.478431, 1 )
emission_energy = 2.0
emission_operator = 0
emission_on_uv2 = false

[node name="Water" type="Area" groups=[
"environment_area",
]]
script = ExtResource( 2 )
type = "Water"

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 1 )

[node name="Surface" type="MeshInstance" parent="CollisionShape"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 1.001, 0 )
mesh = SubResource( 2 )
material/0 = SubResource( 4 )

[node name="Body" type="MeshInstance" parent="CollisionShape"]
visible = false
mesh = SubResource( 5 )
material/0 = SubResource( 6 )
[connection signal="body_entered" from="." to="." method="_on_Water_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_Water_body_exited"]
